# -*- coding: utf-8 -*-
"""hughes6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kLPgoJaBMPtNdrnOGsy-ksJ1aFg3L2hz
"""

# !/usr/bin/env python
# (c) hughes
# ----------------------------------------------------
#

import sys
import math
import random
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from math import pi,sin,cos


class integration():

  # object attribute
  def __init__(self,a,b,n):
    self.a = a
    self.b = b
    self.n = n

  # object method (function)
  def simpson(self, a, b, n):
    sum = 0
    x = (b-a)/n
    for i in range(1, n):
      if i % 2 == 1:
        sum += 4 * sin(x * i + a)
      elif i % 2 == 0:
        sum += 2 * sin(x * i + a)

    sum += sin(a)
    sum += sin(b)
    integral = x * sum / 3

    print("When n =",n,"the approximate integral of sin(x) is", integral)
    return integral

# create objects
a = 0
b = 7*math.pi
nlist = [1,2,5,10,50,100]

# call objects
for n in nlist:
  result = simpson(a, b, n)
  y = (cos(a)-cos(b))
  print("This interval has a rate of improvement of: ", "%3.2e" % abs(result-y/result), "difference from the true value of", (y))
  print("")

# plot convergence
x = range(6)
y = [n for n in nlist]
plt.figure()
plt.plot(x,y)
plt.show()

